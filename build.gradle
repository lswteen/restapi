buildscript {
	ext {
		kotlinVersion = '1.2.41'
		springBootVersion = '2.0.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
		classpath 'org.junit.platform:junit-platform-gradle-plugin:1.1.0-M2'
	}
}

plugins { id "io.spring.dependency-management" version "1.0.4.RELEASE" }

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'
apply plugin: 'org.junit.platform.gradle.plugin'


group = 'com.wemakeprice.unusedticket'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

repositories {
	mavenCentral()
}

configurations {
	providedRuntime
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-aop')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2')
	compile('com.fasterxml.jackson.module:jackson-module-kotlin')
	compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	compile("org.jetbrains.kotlin:kotlin-reflect")
	testCompile('org.springframework.boot:spring-boot-starter-test')

	runtime('mysql:mysql-connector-java')

	// https://mvnrepository.com/artifact/org.apache.tomcat/tomcat-jdbc
	compile group: 'org.apache.tomcat', name: 'tomcat-jdbc', version: '8.0.30'


	// https://mvnrepository.com/artifact/io.springfox/springfox-swagger2
	compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.7.0'
	// https://mvnrepository.com/artifact/io.springfox/springfox-swagger-ui
	compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.7.0'


	// https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
	testCompile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'


//	// JUnit Jupiter API for writing tests and extensions.
//	testCompile("org.junit.jupiter:junit-jupiter-api:5.1.0")
//	// Support for parameterized tests in JUnit Jupiter.
//	testCompile("org.junit.jupiter:junit-jupiter-params:5.1.0")

	// Only needed to run tests in a version of IntelliJ IDEA that bundles older versions
	testRuntime("org.junit.platform:junit-platform-launcher:1.2.0")
	testRuntime("org.junit.jupiter:junit-jupiter-engine:5.2.0")
	testRuntime("org.junit.vintage:junit-vintage-engine:5.2.0")

	// Runner for executing tests and test suites on the JUnit Platform in a JUnit 4 environment.
	// JUnit 4 환경에서 JUnit 플랫폼의 테스트 및 테스트 스위트 실행을위한 러너
	// See Using JUnit 4 to run the JUnit Platform for details.
	// JUnitPlatform.class
	testCompile("org.junit.platform:junit-platform-runner:1.1.0")

	testCompile('name.falgout.jeffrey.testing.junit5:mockito-extension:1.0.0')

	// https://mvnrepository.com/artifact/com.google.code.gson/gson
	compile group: 'com.google.code.gson', name: 'gson', version: '2.8.0'
}
